openapi: 3.0.3
info:
  title: Decrypter as a server
  description: >-
    This is a sample Decrypter Server based on CrackStation 3.0.0 specification. Current version for Decryter Server is 4.0.0.
    You can find out more about CrackStation at [github.com/croxe/CrackStation](https://github.com/croxe/CrackStation). 
    
    Decrypter Server's API can takes SHA1, SHA256 hash as input, and return the password that corresponded to the hash. By using this API, one can break simple hashed password from 1 to 3 digits length. In addition, one can crack the password that in the combination of Upper case, Lower case letters, numbers, "!", and "?" up to three characters length. For example, "0O!" is crackable for Decrypter Server, and "0aeb" is not crackable, because there is four characters.


    The input for API can be SH1 or SHA256 as input. For example, "86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" is a valid input, and the API will return the password, "a".
    
    
    Quick Check with curl:
    
    
    ```
    curl -X POST https://pdthze5ep1.execute-api.us-west-2.amazonaws.com/decrypt -H 'Content-Type:application/json' -d '{"shaHash":"c837307a9a2ad4d08ca61a4f1bd848ba3d6890fc"}'
    ```
    
    
    ```
    curl -v https://pdthze5ep1.execute-api.us-west-2.amazonaws.com/password/c837307a9a2ad4d08ca61a4f1bd848ba3d6890fc
    ```
    
    
  contact:
    email: gaoso@oregonstate.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 4.0.0
servers:
  - url: https://pdthze5ep1.execute-api.us-west-2.amazonaws.com
tags:
  - name: password
    description: Decrypt hashed password
  - name: decrypt    
    description: Decrypt hashed password
    externalDocs:
      description: Get password from uploaded JSON
      url: https://github.com/croxe/CrackStation

paths:
  /password/{shaHash}:
    get:
      tags:
        - password
      summary: Get password by shaHash
      description: 'Find the password corresponse to shaHash, and return {shaHash, password}.'
      parameters:
        - name: shaHash
          description: "shaHash is a hashed password string generated by SHA1 or SHA256"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  shaHash: 
                    type: string
                  password: 
                    type: string
        '400':
          description: Invalid shaHash supplied
        '404':
          description: shaHash not found
  /decrypt:
    post:
      tags:
        - decrypt
      summary: uploads an json that contains shaHash
      description: 'return a json that contains {shaHash, password}'
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shaHash: 
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  shaHash: 
                    type: string
                  password: 
                    type: string
        '400':
          description: Invalid shaHash supplied
        '404':
          description: shaHash not found
